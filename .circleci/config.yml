# This file is mostly adapted from:
# https://circleci.com/docs/2.0/language-ruby/#build-the-demo-ruby-on-rails-project-yourself

version: 2
jobs:
  build-and-test:
    working_directory: ~/meso-backend
    docker:
      - image: circleci/ruby:2.6.4
        environment:
          STRIPE_API_KEY: sk_test_goztKEW01xeVYCUDuoY70VSk
          STRIPE_ACCOUNT_ID: acct_1AUIf0LVHcdVuufE
          INCLUDE_UPKEEP_SPECS: true
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: uhp_backend
          RAILS_ENV: test
      - image: circleci/postgres:9.6.9-alpine
        environment:
          POSTGRES_USER: uhp_backend
          POSTGRES_DB: uhp_backend_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific Gemfile.lock checksum
            # when this file is changed, this key will fail
            - meso-backend-v1-bundle-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: meso-backend-v1-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace
      - run:
          name: Run rspec
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: test_results
  deploy-staging:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - run:
          name: Build docker image
          command: |
            docker build \
              -t mesohealth/backend:master \
              --build-arg SECRET_KEY_BASE=${SECRET_KEY_BASE} .
      - run:
          name: Log into docker
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: Push docker image
          command: |
            docker push mesohealth/backend:master

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build-and-test
      - deploy-staging:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master
